

Agenda
	1. Arrays with loops
	2. Arrays practical
	3. arrays with loops
	4. arrays as parameter and returntype
	5. 2D arrays
	6. string theory

	7. for each loop
		you need to have an array or collections



1. I wanted to separate odd numbers and even numbers between 699 and 1799 and even numbers and odd numbers than put it in an arrays 
	


if(699%2==0) odd/even
if(700%2==0) odd/even
if(701%2==0) odd/even
if(702%2==0) odd/even

if(1799%2==0) odd/even



	int fromRange=699;
	int toRange=1799;
	int range=toRange-fromRange;
	int numbers[]=new int[range];
	
	for(int i=0;i<numbers.lenght;i++)
	{
		numbers[i]=fromRange++;
		
	}


	


Take a array from numbers 1-100 and transfer all the data to another array




i wanted to add two arrays with same size


i wanted to add 2 arrays with same size one array in reverse order


// 2 arrays

package arraysLearn;

public class TransferData {	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int num[]= new int[100];
		
		for(int i=0;i<num.length;i++)
		{
			num[i]=i+1;
		}
		
		int tranNum[]=new int[num.length];
		
		for(int i=0;i<num.length;i++)
		{
			tranNum[i]=num[i];
		}
		
//		for(int aa:num)
//		{
//			System.out.println(aa);
//		}
		int n=99;
//		for(int i=0;i<num.length;i++)
//		{
//			System.out.println(tranNum[i]+num[n--]);
//		}
		
		for(int i=25;i<40;i++)
		{
		System.out.println(num[i]);
		}
		
	}

}






ODD EVEN arrays


package arraysLearn;

import java.util.Scanner;

public class OddArrayEvenArray {

	public static void main(String[] args) {

		Scanner sc=new Scanner(System.in);
		
		System.out.println("enter from range number");
		int fromRange=sc.nextInt();
		System.out.println("enter to range number");
		int toRange=sc.nextInt();
		int range=(toRange-fromRange)+1;
		
		int num[]=new int[range];
		
		
		for(int i=0;i<num.length;i++)
		{
			num[i]=fromRange++;
		}
		
		int even=0;
		int odd=0;
		
		for(int n:num)
		{
			if(n%2==0)
			{
				even++;
			}
			else
			{
				odd++;
			}
			
		}
		System.out.println(even +"          "+odd);
		
		int evenArr[]=new int[even];
		int oddArr[]=new int[odd];
		int eCount=0;
		int oCount=0;
		for(int i=0;i<num.length;i++)
		{
			
			if(num[i]%2==0)
			{
				evenArr[eCount++]=num[i];
			}
			else
			{
				oddArr[oCount++]=num[i];
			}
			
		}
	
		for(int eNum:evenArr)
		{
			System.out.println("this is even number "+eNum);
		}
		for(int eNum:oddArr)
		{
			System.out.println("this is odd number "+eNum);
		}
		
		
		
		
		

	}

}





2D Arrays
	
	int aa[]=new int[10];
	int a[][]=new int[10][10];    

package arraysLearn;

import java.util.Random;

public class TwoDArrays {

	public static void main(String[] args) {


		int num[][]=new int[50][50];
		Random r=new Random();
		for(int i=0;i<num.length;i++)
		{
			for(int j=0;j<num[1].length;j++)
			{
				num[i][j]=r.nextInt(100);
			}
		}
		
		
		for(int i=0;i<num.length;i++)
		{
			for(int j=0;j<num[1].length;j++)
			{
				System.out.print(num[i][j]+"\t");
			}
			System.out.println();
		}
		
		
		
		
		
		

	}

}





Array with parameter


	package arraysLearn;

public class ArraysAsParameter {
	
	
	public static void printStringArray(String data[])
	{
		for(String str:data)
		{
			System.out.println(str);
		}
	}
	
	public static String[] updateData(String data[])
	{
		
		for(int i=0;i<data.length;i++)
		{
			data[i]="QT "+data[i];
		}
		
		
		
		return data;
	}
	
	

	public static void main(String[] args) {

		String names[]=new String[3];
		
		names[0]="Hello";
		names[1]="Welcome";
		names[2]="Java";
		
		printStringArray(names);
		
		
		names=updateData(names);
		for(String s:names)
		{
			System.out.println(s);
		}

	}

}



string theory

Recap


	0 Java knowledge
	basics of java
		providing
	installations
		JDK
	first program in java
	QT management gave me a task to welcome all the students
	methods
		it is block of code 
		can be re-used 

	data types and variables
	types of variable
		static 
		non static
	method with parameter
	method with return type
	constructor
	employee class
	operators
	conditions
	loops
	arrays
	Strings














